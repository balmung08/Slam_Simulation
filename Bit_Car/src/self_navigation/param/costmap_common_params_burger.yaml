footprint: [[-0.73, -0.36], [-0.73, 0.36], [0.73, 0.36], [0.73, -0.36]]     #车体四边范围
#robot_radius: 0.105

map_type: costmap           # 地图类型，costmap(代价地图)  voxel(体素地图)。


obstacle_layer:
  enabled: true
  max_obstacle_height: 2.0
  obstacle_range: 1.5        #障碍物范围
  raytrace_range: 2        #光线追踪距离
  observation_sources: scan            #传给代价地图的传感器列表（名字应该可自定义）：laser_scan_sensor point_cloud_sensor
  scan: {sensor_frame: laser, data_type: LaserScan, topic: scan, marking: true, clearing: true}

local_inflation_layer:
  enabled: true
  inflation_radius: 0.2         #代价地图膨胀半径
  cost_scaling_factor: 10       #在膨胀期间应用于代价值的尺度因子
  
global_inflation_layer:
  enabled: true
  cost_scaling_factor: 10       #在膨胀期间应用于代价值的尺度因子
  inflation_radius: 0.2         #代价地图膨胀半径

  
static_layer:
  enabled: true
