shutdown_costmaps: false # move_base空闲时shutdown_costmaps为true会关掉cost_map,激活是会重新开启
controller_frequency: 10.0 #10.0 # 向底盘控制移动话题cmd_vel发送命令的频率，也是局部路径规划的更新频率，规划一次就算一次速度
controller_patience: 15.0 #5.0 # 在空间清理操作执行前，控制器花多长时间等有效控制下发
planner_frequency: 5.0 #1.0 # 全局规划操作的执行频率
planner_patience: 5.0 #7.0 # 在空间清理操作执行前，留给规划器多长时间来找出一条有效规划
oscillation_timeout: 10.0 # 10 # 执行修复机制前，允许振荡的时间
oscillation_distance: 0.2 # 来回运动在多大距离以上不会被认为是振荡
conservative_reset_dist: 3.0


# local planner：默认trajectory rollout；可选算法见说明文档的[局部路径选择]
# base_local_planner: "dwa_local_planner/DWAPlannerROS" # 指定用于move_base的局部规划器名称

# base_global_planner: "global_planner/GlobalPlanner" #alternatives: global_planner/GlobalPlanner, carrot_planner/CarrotPlanner
base_global_planner: "navfn/NavfnROS" #指定用于move_base的全局规划器插件名称

# 恢复行为
recovery_behavior_enabled: true
# 如果用默认参数，则是按顺序加载了conservative_clear(保守清理), rotate(自转), aggressive_clear(激进清理), rotate
# 此处让他先清理完了再去自转，节约时间
recovery_behaviors:
  - name: 'conservative_reset'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
  - name: 'aggressive_reset'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
  - name: 'clearing_rotation'
    type: 'rotate_recovery/RotateRecovery'
conservative_reset:
  reset_distance: 3.0
  layer_names: 
     - obstacles
    
aggressive_reset:
  reset_distance: 0.0
  layer_names:
     - obstacles


